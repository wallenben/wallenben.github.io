{
    "componentChunkName": "component---src-pages-blog-mdx-slug-tsx",
    "path": "/blog/designchoices/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Gameboy Design Choices","date":"February 12, 2022"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Gameboy Design Choices\",\n  \"date\": \"2022-02-12\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Design choices in emulation\")), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"One of the biggest hurdles I faced early on was the quientessential design decision of what language to use for this emulator project. Initially, I figured writing the emulator in C would be ideal - I could use a graphics library like \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.libsdl.org/\"\n  }, \"SDL\"), \" to display the emulator effectively,  but after initial testing it was very apparent that the lack of the std library from C++ would add another layer of \\\"research abstraction\\\": I would be researching the GB archietecture, SDL, and C itself -- which is a bit too much for me to tackle in one project.\"), mdx(\"p\", null, \"Because C was out of the question, my natural inclination was to check out C++ - most of the fun of C with nice enhancements to streamline development. While I think C++ would be a fine choice for emulation development, I ended up deciding to use JavaScript (TypeScript) instead to take advantage of various nicities of JS. \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Graphics are very easy to display with JS and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<canvas>\"), \" tags \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JSON is a godsend for various architectural complexities e.g. registers and flags in the CPU\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I would like to become more familar with JS for web development purposes\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"09466b53-dc63-5d7d-bbc2-17999cd79303","slug":"designchoices","__params":{"slug":"designchoices"}}},
    "staticQueryHashes": ["3159585216"]}